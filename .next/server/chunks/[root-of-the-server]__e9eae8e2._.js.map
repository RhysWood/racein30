{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhyswood/dev/racein30/src/models/utils/database.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nlet isConnected = false;\n\nexport const connectToDb = async () => {\n  if (isConnected) return;\n\n  try {\n    await mongoose.connect(process.env.MONGODB_URI);\n    isConnected = true;\n    console.log('MongoDB connected');\n  } catch (error) {\n    console.log('MongoDB connection error:', error);\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,cAAc;AAEX,MAAM,cAAc;IACzB,IAAI,aAAa;IAEjB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW;QAC9C,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,6BAA6B;IAC3C;AACF","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhyswood/dev/racein30/src/app/api/analytics/route.js"],"sourcesContent":["import { connectToDb } from '../../../models/utils/database';\nimport mongoose from 'mongoose';\n\n// Create analytics schema\nconst analyticsSchema = new mongoose.Schema({\n  raceId: { type: mongoose.Schema.Types.ObjectId, required: true },\n  voteType: { type: String, required: true },\n  timestamp: { type: Date, default: Date.now },\n  userAgent: String\n});\n\n// Get or create model\nconst Analytics = mongoose.models.Analytics || mongoose.model('Analytics', analyticsSchema);\n\nexport async function POST(request) {\n  try {\n    await connectToDb();\n    const data = await request.json();\n    await Analytics.create(data);\n    \n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    console.error('Analytics error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to track analytics' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,0BAA0B;AAC1B,MAAM,kBAAkB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IAC1C,QAAQ;QAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QAAE,UAAU;IAAK;IAC/D,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;IAC3C,WAAW;AACb;AAEA,sBAAsB;AACtB,MAAM,YAAY,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,SAAS,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,aAAa;AAEpE,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,CAAA,GAAA,oIAAA,CAAA,cAAW,AAAD;QAChB,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,UAAU,MAAM,CAAC;QAEvB,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS;QAAK,IAAI;YACrD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oBAAoB;QAClC,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO;QAA4B,IAAI;YAC1E,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF;AACF","debugId":null}}]
}