{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhyswood/dev/racein30/src/models/utils/database.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nlet isConnected = false;\n\nexport const connectToDb = async () => {\n  if (isConnected) return;\n\n  try {\n    await mongoose.connect(process.env.MONGODB_URI);\n    isConnected = true;\n    console.log('MongoDB connected');\n  } catch (error) {\n    console.log('MongoDB connection error:', error);\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,cAAc;AAEX,MAAM,cAAc;IACzB,IAAI,aAAa;IAEjB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW;QAC9C,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,6BAA6B;IAC3C;AACF","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhyswood/dev/racein30/src/models/RaceWeekend.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst raceWeekendSchema = new mongoose.Schema({\n  race: { type: String, required: true },\n  date: { type: Date, required: true },\n  votes: {\n    fullRace: { type: Number, default: 0 },\n    raceIn30: { type: Number, default: 0 }\n  }\n});\n\nexport default mongoose.models.RaceWeekend || mongoose.model('RaceWeekend', raceWeekendSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IAC5C,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,MAAM;QAAE,MAAM;QAAM,UAAU;IAAK;IACnC,OAAO;QACL,UAAU;YAAE,MAAM;YAAQ,SAAS;QAAE;QACrC,UAAU;YAAE,MAAM;YAAQ,SAAS;QAAE;IACvC;AACF;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,WAAW,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,eAAe","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhyswood/dev/racein30/src/app/api/previous-races/route.js"],"sourcesContent":["import { connectToDb } from '../../../models/utils/database';\nimport RaceWeekend from '../../../models/RaceWeekend';\n\nexport async function GET() {\n  await connectToDb();\n  const today = new Date();\n  // Get last 4 races before today, most recent first\n  const races = await RaceWeekend.find({ date: { $lt: today } })\n    .sort({ date: -1 })\n    .limit(4)\n    .lean();\n  return new Response(JSON.stringify(races), { status: 200 });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,CAAA,GAAA,oIAAA,CAAA,cAAW,AAAD;IAChB,MAAM,QAAQ,IAAI;IAClB,mDAAmD;IACnD,MAAM,QAAQ,MAAM,8HAAA,CAAA,UAAW,CAAC,IAAI,CAAC;QAAE,MAAM;YAAE,KAAK;QAAM;IAAE,GACzD,IAAI,CAAC;QAAE,MAAM,CAAC;IAAE,GAChB,KAAK,CAAC,GACN,IAAI;IACP,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,QAAQ;QAAE,QAAQ;IAAI;AAC3D","debugId":null}}]
}