{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhyswood/dev/racein30/src/models/utils/database.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nlet isConnected = false;\n\nexport const connectToDb = async () => {\n  if (isConnected) return;\n\n  try {\n    await mongoose.connect(process.env.MONGODB_URI);\n    isConnected = true;\n    console.log('MongoDB connected');\n  } catch (error) {\n    console.log('MongoDB connection error:', error);\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,cAAc;AAEX,MAAM,cAAc;IACzB,IAAI,aAAa;IAEjB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW;QAC9C,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,6BAA6B;IAC3C;AACF","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhyswood/dev/racein30/src/models/RaceWeekend.js"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst raceWeekendSchema = new mongoose.Schema({\n  race: { type: String, required: true },\n  date: { type: Date, required: true },\n  votes: {\n    fullRace: { type: Number, default: 0 },\n    raceIn30: { type: Number, default: 0 }\n  }\n});\n\nexport default mongoose.models.RaceWeekend || mongoose.model('RaceWeekend', raceWeekendSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IAC5C,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,MAAM;QAAE,MAAM;QAAM,UAAU;IAAK;IACnC,OAAO;QACL,UAAU;YAAE,MAAM;YAAQ,SAAS;QAAE;QACrC,UAAU;YAAE,MAAM;YAAQ,SAAS;QAAE;IACvC;AACF;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,WAAW,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,eAAe","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhyswood/dev/racein30/src/utils/analytics.js"],"sourcesContent":["export const trackVote = async (raceId, voteType) => {\n  try {\n    const getScreenSize = () => {\n      if (typeof window !== 'undefined' && window.screen) {\n        return `${window.screen.width}x${window.screen.height}`;\n      }\n      return 'test'; // Fallback if not running in a browser environment\n    };\n\n    const analyticsData = {\n      raceId,\n      voteType,\n      timestamp: new Date(),\n      metadata: {\n        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n        userAgent: typeof window !== 'undefined' ? window.navigator.userAgent : 'test',\n        language: typeof window !== 'undefined' ? window.navigator.language : 'test',\n        platform: typeof window !== 'undefined' ? window.navigator.platform : 'test',\n        screenSize: getScreenSize(),\n        referrer: typeof document !== 'undefined' ? document.referrer : 'test',\n        deviceType: typeof window !== 'undefined' && /mobile/i.test(window.navigator.userAgent) ? 'mobile' : 'desktop',\n        timeOnPage: typeof window !== 'undefined' && window.performance && window.performance.timing\n          ? Math.round((Date.now() - window.performance.timing.navigationStart) / 1000)\n          : 0,\n        performanceMetrics: {\n          pageLoadTime: typeof window !== 'undefined' && window.performance && window.performance.timing\n            ? window.performance.timing.loadEventEnd - window.performance.timing.navigationStart\n            : 0,\n          domInteractive: typeof window !== 'undefined' && window.performance && window.performance.timing\n            ? window.performance.timing.domInteractive - window.performance.timing.navigationStart\n            : 0,\n          firstContentfulPaint: typeof performance !== 'undefined' && performance.getEntriesByType('paint')[0]\n            ? performance.getEntriesByType('paint')[0]?.startTime\n            : 0,\n        },\n        connection: {\n          type: typeof navigator !== 'undefined' && navigator.connection ? navigator.connection?.effectiveType || 'unknown' : 'unknown',\n          downlink: typeof navigator !== 'undefined' && navigator.connection ? navigator.connection?.downlink : 0,\n        },\n      },\n    };\n\n    // Helper to get the correct analytics endpoint URL\n    const getAnalyticsUrl = () => {\n      if (typeof window === 'undefined') {\n        // Server-side: must use absolute URL\n        const base =\n          process.env.NEXT_PUBLIC_SITE_URL ||\n          (process.env.VERCEL_URL && `https://${process.env.VERCEL_URL}`) ||\n          'http://localhost:3000';\n        return `${base}/api/analytics`;\n      }\n      // Client-side: relative URL is fine\n      return '/api/analytics';\n    };\n\n    if (typeof fetch !== 'undefined') {\n      await fetch(getAnalyticsUrl(), {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(analyticsData),\n      });\n    } else {\n      console.warn('fetch is not available');\n    }\n  } catch (error) {\n    console.error('Analytics error:', error);\n  }\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,YAAY,OAAO,QAAQ;IACtC,IAAI;QACF,MAAM,gBAAgB;YACpB,uCAAoD;;YAEpD;YACA,OAAO,QAAQ,mDAAmD;QACpE;QAEA,MAAM,gBAAgB;YACpB;YACA;YACA,WAAW,IAAI;YACf,UAAU;gBACR,UAAU,KAAK,cAAc,GAAG,eAAe,GAAG,QAAQ;gBAC1D,WAAW,6EAA6D;gBACxE,UAAU,6EAA4D;gBACtE,UAAU,6EAA4D;gBACtE,YAAY;gBACZ,UAAU,OAAO,aAAa,cAAc,SAAS,QAAQ,GAAG;gBAChE,YAAY,gBAAkB,eAAe,UAAU,IAAI,CAAC,OAAO,SAAS,CAAC,SAAS,2CAAe;gBACrG,YAAY,6EAER;gBACJ,oBAAoB;oBAClB,cAAc,6EAEV;oBACJ,gBAAgB,6EAEZ;oBACJ,sBAAsB,OAAO,gBAAgB,eAAe,YAAY,gBAAgB,CAAC,QAAQ,CAAC,EAAE,GAChG,YAAY,gBAAgB,CAAC,QAAQ,CAAC,EAAE,EAAE,YAC1C;gBACN;gBACA,YAAY;oBACV,MAAM,OAAO,cAAc,eAAe,UAAU,UAAU,GAAG,UAAU,UAAU,EAAE,iBAAiB,YAAY;oBACpH,UAAU,OAAO,cAAc,eAAe,UAAU,UAAU,GAAG,UAAU,UAAU,EAAE,WAAW;gBACxG;YACF;QACF;QAEA,mDAAmD;QACnD,MAAM,kBAAkB;YACtB,wCAAmC;gBACjC,qCAAqC;gBACrC,MAAM,OACJ,QAAQ,GAAG,CAAC,oBAAoB,IAC/B,QAAQ,GAAG,CAAC,UAAU,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,UAAU,EAAE,IAC9D;gBACF,OAAO,GAAG,KAAK,cAAc,CAAC;YAChC;;QAGF;QAEA,IAAI,OAAO,UAAU,aAAa;YAChC,MAAM,MAAM,mBAAmB;gBAC7B,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;YACvB;QACF,OAAO;YACL,QAAQ,IAAI,CAAC;QACf;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oBAAoB;IACpC;AACF","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhyswood/dev/racein30/src/app/api/vote/route.js"],"sourcesContent":["import { connectToDb } from '../../../models/utils/database';\nimport RaceWeekend from '../../../models/RaceWeekend';\nimport { trackVote } from '../../../utils/analytics';\n\n\nexport async function POST(request) {\n    try {\n      const { raceId, voteType } = await request.json();\n      \n      // Input validation\n      if (!raceId || !voteType) {\n        return new Response(\n          JSON.stringify({ error: 'Missing required fields' }), \n          { status: 400 }\n        );\n      }\n  \n      // Validate vote type\n      if (!['fullRace', 'raceIn30'].includes(voteType)) {\n        return new Response(\n          JSON.stringify({ error: 'Invalid vote type' }), \n          { status: 400 }\n        );\n      }\n  \n      // Connect to database\n      await connectToDb();\n  \n      // Update vote count\n      const race = await RaceWeekend.findByIdAndUpdate(\n        raceId,\n        { $inc: { [`votes.${voteType}`]: 1 } },\n        { new: true }\n      );\n  \n      // Check if race exists\n      if (!race) {\n        return new Response(\n          JSON.stringify({ error: 'Race not found' }), \n          { status: 404 }\n        );\n      }\n  \n      // Track analytics\n      try {\n        await trackVote(raceId, voteType);\n      } catch (analyticsError) {\n        // Log but don't fail the vote if analytics fails\n        console.error('Analytics error:', analyticsError);\n      }\n  \n      // Return updated race data\n      return new Response(\n        JSON.stringify(race), \n        { \n          status: 200,\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        }\n      );\n  \n    } catch (error) {\n      console.error('Vote error:', error);\n      return new Response(\n        JSON.stringify({ error: 'Failed to cast vote' }), \n        { \n          status: 500,\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        }\n      );\n    }\n  }\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAGO,eAAe,KAAK,OAAO;IAC9B,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE/C,mBAAmB;QACnB,IAAI,CAAC,UAAU,CAAC,UAAU;YACxB,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;gBAAE,OAAO;YAA0B,IAClD;gBAAE,QAAQ;YAAI;QAElB;QAEA,qBAAqB;QACrB,IAAI,CAAC;YAAC;YAAY;SAAW,CAAC,QAAQ,CAAC,WAAW;YAChD,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;gBAAE,OAAO;YAAoB,IAC5C;gBAAE,QAAQ;YAAI;QAElB;QAEA,sBAAsB;QACtB,MAAM,CAAA,GAAA,oIAAA,CAAA,cAAW,AAAD;QAEhB,oBAAoB;QACpB,MAAM,OAAO,MAAM,8HAAA,CAAA,UAAW,CAAC,iBAAiB,CAC9C,QACA;YAAE,MAAM;gBAAE,CAAC,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE;YAAE;QAAE,GACrC;YAAE,KAAK;QAAK;QAGd,uBAAuB;QACvB,IAAI,CAAC,MAAM;YACT,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;gBAAE,OAAO;YAAiB,IACzC;gBAAE,QAAQ;YAAI;QAElB;QAEA,kBAAkB;QAClB,IAAI;YACF,MAAM,CAAA,GAAA,2HAAA,CAAA,YAAS,AAAD,EAAE,QAAQ;QAC1B,EAAE,OAAO,gBAAgB;YACvB,iDAAiD;YACjD,QAAQ,KAAK,CAAC,oBAAoB;QACpC;QAEA,2BAA2B;QAC3B,OAAO,IAAI,SACT,KAAK,SAAS,CAAC,OACf;YACE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;IAGJ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,eAAe;QAC7B,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YAAE,OAAO;QAAsB,IAC9C;YACE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;IAEJ;AACF","debugId":null}}]
}